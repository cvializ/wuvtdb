WUVT INFORMATION MANAGEMENT SYSTEM (IMS)
CODENAME: "AWOL-DMS"

CHANGE LOG
==========
2011-05-23: DOCUMENT CREATED BY MJB

INTRODUCTION
============
The WUVT IMS is the successor of the highly successful, critically acclaimed Quicktrack
software package written by McKillican Software Enterprices, LLC.  The purpose of Quicktrack
is to allow Disc Jockeys to log the tracks the play as they do their shows on WUVT.

The Quicktrack package currently performs the following tasks:
- Maintains a list of DJ's, past and present.
- Allows DJ's to enter tracks as they play them on their show.
- Allows public users to query the database for playlists based on show name or date played
- Allows private users to query the database for playlists based on hour, rotation bin, etc.
- Maintains the number of streaming listeners at any given point for licensing reasons.
- Other miscellaneous reports.

The new AWOL-DMS package will extend this by integrating a full database of WUVT's music
collection.  This information is currently stored in a series of Excel Spreadsheets in the
posession of our librarian, Len.  Those spreadsheets have the following columns:
- Artist Name
- Album Title
- Label/Distributor Name
- Release Year
- Genre
- Location
- Comments (currently, only indicates "Missing")

In AWOL-DMS, the track logging system will be linked to the music database such that when
tracks are entered, they are logged by reference instead of as plain text.  In the event
that a DJ brings in CD's from home, they will be added to a special stack (location)
called "Not in WUVT" or something similar, so that the benefits of a music database can
be realized.

Internally, DJ's should be able to browse or search the database by stack, artist, album, song, or
any other logical field.  Entries should show the user basic information about the album,
including where it is, what albums WUVT has by the same artist, what albums WUVT has by a
particular record label, etc.  DJ's should also be able to see who else played a given song
and when, taking them over to the appropriate playlist.

Track logging should work similarly to Quicktrack 1.0.  The work flow is as follows.  A DJ walks
into the studio and sits down.  They log in (creating a new show, if necessary), and are presented
with a blank playlist.  They proceed to enter track data as they do their show, and when the are
done they simply log out.

Because this is only accessible behind a secure network, any computer that pulls up the playlist
should be able to edit it.  This is useful in case a user wants to switch computers for logging in
the studio (this happens when a computer dies).  This also prevents multiple shows from going on
at once, which makes no sense.

The Playlist Entry form will ideally use some sort of autocomplete, similar to Facebook, to
assist DJ's with track entry and to help ensure that tracks are entered consistantly.  It would
be even better if the system had a way to give preference to artists from a given stack
(i.e., DJ's who play americana music should be presented with Americana artists first when
entering tracks).  It would be even cooler if the database figured out what genres/artists/albums
a DJ plays a lot and floats them to the top of the list.

In addition to logging songs, a new feature of the database is logging "traffic" - that is,
things read or played on air that is not music.  Examples of traffic include underwriting,
public service announcements, promos, liners, ID's, and so forth.  This is currently logged on
paper and it would be nice to have it in the same database.  In addition, we could potentially
charge more for underwriters if their info showed up on the website in the playlist.

The database should be able to store the copy (text) of PSA's and Underwriting, and should bug
a DJ doing their show when it is time to read it on air.  This is particularly important for
Underwriting and would help to ensure Underwriting gets read when they's supposed to.

Engineering Logs are another thing that is currently logged on paper and would benefit from
computerized logging.  The columns right now are fixed but it'd be cool if we had a way to log
arbitrary data down the road in a logical way.

CURRENT DATABASE SCHEMA
=======================
The database is organized into the following tables.

Stack: A list of stacks in the station.  A stack is a shelf where something physically lives.
As it stands now, there are ~45 stacks at WUVT.

Rotation Bin: A rotation bin is where an album lives temporarily in order to increase how many
times it is played.  An album is physically removed from it's stack and placed into the rotation
bin in the studio.  There are ~8 rotation bins at WUVT.

Station: A station represents a physical station where music is played.  At WUVT, there are two
stations, AM and FM.  There is a third called "Test" for testing purposes.

Traffic Type: This table holds an enumerated list of different types of traffic.  Examples of
traffic includes public service announcements (PSAs), Underwriting (UA), liners, promos,
ID's and so forth.

Reviewer: A list of people who have reviewed albums, so that we can keep track of who reviewed
what.  This is kept so we can track people who reviewed albums but aren't at WUVT anymore.

Underwriter: An address book of underwriters.

Show: Represents a unique radio show at WUVT.  Each show airs once a week (generally)

Label: Represents a record label.

Artist: Represents an artist.

Album: The meat of the database.  Represents a physical album at WUVT (on CD or Vinyl).

Song: Represents a song on an album.  How we're gonna get song info for 40k records, I have
no freaking clue...but we'll find a way!

Traffic: Like a song, but a piece of traffic.

Operator Log: This table stores each time a show (operator) signs into the studio.  The operator
log is also used to break things into playlists by DJ.

Station Log: This is a table of every song or piece of trafffic ever played at WUVT.

Engineering Log: This is a log of Engineering Data, taken every two hours by hand.

Traffic Time: A really really kludgy way of assigning times that a piece of traffic
should be read at.  Yeahhhhh.